from Crypto.Util.number import *
from functools import reduce
from sympy import *

n1 = 18635768166647350342441965373067930587390572936670070711729558640059683171588230770807050761816750304940618228339774809236267750611388524303910333065140961266466049514312589548646366981318085018346372231599966433995751926632822114751130456398374847003730153117463124591682444484130213661754770405342132046835210280544971384579504947655404701131625016457278775984207415708989571415037039046010128289473247490488070041549761896484626157176982080893601288176659354909034760695338413565050279461390202358819646299541884659799485709569400404884898083883726749561196784448291074598982404348243395302962215813996259969887159

n2 = 17902191503504318692492983181426479429129629402134322300932089073264193457312369235124051377038134553831711933113892211853965031666242480894505639132083095732409489783116318887702080377870202003301132065524001196532617092648243286550077159288426540457737782791405867895087690277872066304450383159289357492536640408232982423825180176573357771141517406466778108221707215067133195792273142653043249649291323921761563788491853484825750598328567783413153944297865943407526067428565461515399561267445081195095300514755593450420493237997272435459140171292735803019836543947409733063944596031206583742779877774484876687058741

n3 = 16335897006050479233637668856356008295565965462513968998989200515310504101536957724865853970223880027855357942982467535975062755847783488408458353163397886880011730128065739178756577030740932692961168554520715669706478424683313407158791408867096238470312630616235057394422004843953936903586880085146801122680264213672531526750932057924248298690602380033154365756086775247315138983350145488027424697972776382257968084160711727495808343295149862046691001154795894661071997653281115170849347604833755388614573762270014580167584335699761397136544105029659844818332001583809853605339922503468883895265492216306084113308727
n = n1*n2*n3
c = 1295564702637495685309272079895645034267002212576577351176786924725825901033456751565363132227845395192636014504044948379030468685845611242265523726539023437126669783303765124723915472786629678436713048730755297486348344599742142845784560313837239832937917360379066282667491918054529416764918515780567145928364634646722930481542026187360739697820492335622597715014255829089436910724972509085963133800806856075152036053630879580926838241308921405124424958500485001162000846198656477271924822124768722799190195854806533587717469450248664509344104461703840455934612539385694033634268205463024167234754553081069919678171898669570723347606172526826003367647892759191360901723076962059024693433937573808414595918813154817183122218324304727720231993955442001953029300266308755291774280607633683770298830407751731984235360718897231362141728129903067324174378760053260419744395257753779565716943029464080442902252184316484343234160161564121269883788523966796266675498603214422442299610994620373055814615356464754724264668947373104292350153322562799134518201535870142301501474217531998628211638040128486684200215958700680344308113382908656637378359217107811764695801417920230331446471475336055801665419851805385433677261916024902543165187462517860936690178095112472342793009281361928879367602088695738746822374043544415398979893735410561210643701354068887205774369902436302903034048756740583183966251194450689131063910079690811851244607443172434856486129471747053074648343069627212505795579741010868965206480675568896896528625130571758075102146302306655426190892962618128161759734724982773347245232038629926619247273436934947196867813659364951484832193239178102156204300353342841972762595259292048840326449938071520689839586933982775979336248771535685895403976612898604059800532915376510948151614460338199157528220842025853852584958511622657382701623309639101678362821929006062524756352592131742510350318470015268920615837821556797760508924258618057921324240995910743034414956163701330735308503014893515707188853735706296571253748889626515245648558769422283608966241496382223293119306642490794180175154686106323945765280777140420938641267467633112805720348438191023736935327334544026698324629536721807051447503613438954736205208639453193587326470160505597834244792859179593877840449441035962707113092034561698560285482507381177956117498938436596192528337690808299050972992206796450167499247505347105318901580848542927515381051973057219542622235114029773502036331075236848879130640275120244541018979621405480997745366565533911987665660584132852855158311718515145400486762846976972483867689062569575052791463761762637757579908921446285546575036947648139847182684615282524513693899858284291993167395096893612172061860682116974864364966362118833708791957224527084022917788839602167742342150067548893185747653708657029597051779997866982601553339504636518951723213334104705177572536156329378433835224612846933662252315126902599937489337158843870992464520248466088492159756466651557918397098886626028193224320040156124777562920457488126430654110240828124538167742484933802988652725530546987842196376
e = 65537
phi = (n1-1)*(n2-1)*(n3-1)
d = pow(e,-1,phi)
e = 65537
print(long_to_bytes(pow(c,d,n)))




